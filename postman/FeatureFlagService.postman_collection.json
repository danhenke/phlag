{
    "info": {
        "_postman_id": "88ab12c2-6383-4cc6-9cc8-d9d9d7eec68c",
        "name": "Phlag Feature Flag Service",
        "description": "Collection for exercising the Phlag Feature Flag Service REST API. Configure the `apiKey` variable with a valid project/environment API key before exchanging it for a JWT and running authenticated requests.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Authentication",
            "description": "Obtain JWT bearer tokens from project/environment API keys.",
            "item": [
                {
                    "name": "Exchange API key for JWT",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"project\": \"{{projectKey}}\",\n    \"environment\": \"{{environmentKey}}\",\n    \"api_key\": \"{{apiKey}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/v1/auth/token",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "auth",
                                "token"
                            ]
                        },
                        "description": "Exchanges a project/environment API key for a short-lived JWT. Populate the `apiKey` collection variable before sending. The success handler stores the bearer token for downstream requests."
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var responseData = pm.response.json();",
                                    "    if (responseData && responseData.token) {",
                                    "        pm.collectionVariables.set('bearerToken', responseData.token);",
                                    "        pm.test('Stored bearer token', function () {",
                                    "            pm.expect(pm.collectionVariables.get('bearerToken')).to.be.a('string');",
                                    "        });",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "response": [
                        {
                            "name": "Example success",
                            "originalRequest": {
                                "method": "POST",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Accept",
                                        "value": "application/json"
                                    }
                                ],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"project\": \"demo-project\",\n    \"environment\": \"production\",\n    \"api_key\": \"demo-api-key\"\n}"
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/v1/auth/token",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "v1",
                                        "auth",
                                        "token"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n    \"token\": \"<jwt-token>\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 3600,\n    \"project\": \"demo-project\",\n    \"environment\": \"production\",\n    \"roles\": [\n        \"projects.read\",\n        \"environments.read\",\n        \"flags.read\",\n        \"flags.evaluate\",\n        \"cache.warm\"\n    ]\n}"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Projects",
            "description": "Manage flag projects (CRUD).",
            "item": [
                {
                    "name": "List projects",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects"
                            ]
                        },
                        "description": "Returns paginated projects. Adjust `page`/`per_page` as needed."
                    }
                },
                {
                    "name": "Create project",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"key\": \"web-app\",\n    \"name\": \"Web App\",\n    \"description\": \"Project for the primary web channel.\",\n    \"metadata\": {\n        \"owner\": \"owner@example.com\",\n        \"timezone\": \"UTC\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects"
                            ]
                        },
                        "description": "Creates a project. Update the `key` before re-running to avoid uniqueness conflicts."
                    }
                },
                {
                    "name": "Get project",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}"
                            ]
                        },
                        "description": "Retrieves a single project by key and includes its environments."
                    }
                },
                {
                    "name": "Update project",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"description\": \"Updated description from Postman collection.\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}"
                            ]
                        },
                        "description": "Performs a partial update on the referenced project."
                    }
                },
                {
                    "name": "Delete project",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}"
                            ]
                        },
                        "description": "Deletes the referenced project. Use with demo resources only."
                    }
                }
            ]
        },
        {
            "name": "Environments",
            "description": "Manage environments linked to a project.",
            "item": [
                {
                    "name": "List environments",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/environments",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "environments"
                            ]
                        },
                        "description": "Lists environments for the specified project."
                    }
                },
                {
                    "name": "Create environment",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"key\": \"qa\",\n    \"name\": \"QA\",\n    \"description\": \"Quality assurance environment\",\n    \"is_default\": false,\n    \"metadata\": {\n        \"url\": \"https://qa.phlag.test\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/environments",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "environments"
                            ]
                        },
                        "description": "Creates an environment under the project. Toggle `is_default` to swap the primary environment."
                    }
                },
                {
                    "name": "Get environment",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/environments/{{environmentKey}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "environments",
                                "{{environmentKey}}"
                            ]
                        },
                        "description": "Retrieves a single environment by key."
                    }
                },
                {
                    "name": "Update environment",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"metadata\": {\n        \"url\": \"https://updated.phlag.test\"\n    }\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/environments/{{environmentKey}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "environments",
                                "{{environmentKey}}"
                            ]
                        },
                        "description": "Partially updates the environment, e.g., to refresh metadata."
                    }
                },
                {
                    "name": "Delete environment",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/environments/{{environmentKey}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "environments",
                                "{{environmentKey}}"
                            ]
                        },
                        "description": "Deletes the environment. Avoid running against seeded environments unless you plan to reseed."
                    }
                }
            ]
        },
        {
            "name": "Flags",
            "description": "Manage feature flags within a project.",
            "item": [
                {
                    "name": "List flags",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/flags",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "flags"
                            ]
                        },
                        "description": "Lists flags for the project with pagination support."
                    }
                },
                {
                    "name": "Create flag",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"key\": \"banner-test\",\n    \"name\": \"Homepage Banner Test\",\n    \"description\": \"Experiment with hero banner messaging.\",\n    \"is_enabled\": false,\n    \"variants\": [\n        {\n            \"key\": \"control\",\n            \"weight\": 50\n        },\n        {\n            \"key\": \"experiment\",\n            \"weight\": 50\n        }\n    ],\n    \"rules\": [\n        {\n            \"match\": {\n                \"segment\": [\n                    \"beta-testers\"\n                ]\n            },\n            \"variant\": \"experiment\",\n            \"rollout\": 100\n        }\n    ]\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/flags",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "flags"
                            ]
                        },
                        "description": "Creates a feature flag. Adjust variant weights and targeting rules per experiment."
                    }
                },
                {
                    "name": "Get flag",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/flags/{{flagKey}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "flags",
                                "{{flagKey}}"
                            ]
                        },
                        "description": "Retrieves a single flag by key for the project."
                    }
                },
                {
                    "name": "Update flag",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "PATCH",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"is_enabled\": true,\n    \"description\": \"Enabled for production rollout via Postman.\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/flags/{{flagKey}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "flags",
                                "{{flagKey}}"
                            ]
                        },
                        "description": "Updates the flag configuration, e.g., toggling enabled state."
                    }
                },
                {
                    "name": "Delete flag",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/projects/{{projectKey}}/flags/{{flagKey}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "projects",
                                "{{projectKey}}",
                                "flags",
                                "{{flagKey}}"
                            ]
                        },
                        "description": "Deletes the specified flag. Use caution in shared environments."
                    }
                }
            ]
        },
        {
            "name": "Evaluations",
            "description": "Evaluate flags with contextual attributes.",
            "item": [
                {
                    "name": "Evaluate flag",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/evaluate?project={{projectKey}}&env={{environmentKey}}&flag={{flagKey}}&user_id=user-123&segment={{audienceSegment}}",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "evaluate"
                            ],
                            "query": [
                                {
                                    "key": "project",
                                    "value": "{{projectKey}}"
                                },
                                {
                                    "key": "env",
                                    "value": "{{environmentKey}}"
                                },
                                {
                                    "key": "flag",
                                    "value": "{{flagKey}}"
                                },
                                {
                                    "key": "user_id",
                                    "value": "user-123"
                                },
                                {
                                    "key": "segment",
                                    "value": "{{audienceSegment}}"
                                }
                            ]
                        },
                        "description": "Evaluates a flag for a given project, environment, and user context. Append additional query parameters to model targeting attributes (arrays supported via repeated keys)."
                    },
                    "response": [
                        {
                            "name": "Example evaluation",
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n    \"id\": \"f6b05156-3a1d-4b90-9fed-0123456789ab\",\n    \"project\": {\n        \"id\": \"11111111-1111-4111-9111-111111111111\",\n        \"key\": \"demo-project\"\n    },\n    \"environment\": {\n        \"id\": \"22222222-2222-4222-9222-222222222222\",\n        \"key\": \"production\"\n    },\n    \"flag\": {\n        \"id\": \"44444444-4444-4444-9444-444444444444\",\n        \"key\": \"checkout-redesign\",\n        \"is_enabled\": true\n    },\n    \"user\": {\n        \"identifier\": \"user-123\"\n    },\n    \"context\": {\n        \"segment\": \"beta-testers\"\n    },\n    \"result\": {\n        \"variant\": \"variant\",\n        \"reason\": \"matched_segment_rollout\",\n        \"rollout\": 75,\n        \"payload\": {\n            \"variant\": \"variant\",\n            \"rollout\": 75\n        }\n    },\n    \"evaluated_at\": \"2025-10-11T10:15:00Z\"\n}"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Audit",
            "description": "Retrieve audit events that capture flag and project changes.",
            "item": [
                {
                    "name": "List audit events",
                    "request": {
                        "auth": {
                            "type": "bearer",
                            "bearer": [
                                {
                                    "key": "token",
                                    "value": "{{bearerToken}}",
                                    "type": "string"
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/v1/audit-events?project={{projectKey}}&per_page=20",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "v1",
                                "audit-events"
                            ],
                            "query": [
                                {
                                    "key": "project",
                                    "value": "{{projectKey}}"
                                },
                                {
                                    "key": "environment",
                                    "value": "{{environmentKey}}",
                                    "disabled": true
                                },
                                {
                                    "key": "flag",
                                    "value": "{{flagKey}}",
                                    "disabled": true
                                },
                                {
                                    "key": "action",
                                    "value": "flag.updated",
                                    "disabled": true
                                },
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "per_page",
                                    "value": "20"
                                }
                            ]
                        },
                        "description": "Lists audit records filtered by project. Enable additional query parameters to scope by environment, flag, or action once the API is available."
                    },
                    "response": [
                        {
                            "name": "Example audit log",
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n    \"data\": [\n        {\n            \"id\": \"88888888-8888-4888-9888-888888888888\",\n            \"action\": \"flag.updated\",\n            \"target\": {\n                \"type\": \"flag\",\n                \"id\": \"44444444-4444-4444-9444-444444444444\"\n            },\n            \"actor\": {\n                \"type\": \"user\",\n                \"identifier\": \"dan@phlag.test\"\n            },\n            \"project\": {\n                \"id\": \"11111111-1111-4111-9111-111111111111\",\n                \"key\": \"demo-project\"\n            },\n            \"environment\": {\n                \"id\": \"22222222-2222-4222-9222-222222222222\",\n                \"key\": \"production\"\n            },\n            \"flag\": {\n                \"id\": \"44444444-4444-4444-9444-444444444444\",\n                \"key\": \"checkout-redesign\"\n            },\n            \"changes\": {\n                \"is_enabled\": {\n                    \"old\": false,\n                    \"new\": true\n                }\n            },\n            \"context\": {\n                \"ip_address\": \"10.20.30.40\"\n            },\n            \"occurred_at\": \"2025-10-11T09:15:00Z\"\n        }\n    ],\n    \"meta\": {\n        \"page\": 1,\n        \"per_page\": 20,\n        \"total\": 2\n    }\n}"
                        }
                    ]
                }
            ]
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost",
            "type": "string"
        },
        {
            "key": "projectKey",
            "value": "demo-project",
            "type": "string"
        },
        {
            "key": "environmentKey",
            "value": "production",
            "type": "string"
        },
        {
            "key": "flagKey",
            "value": "checkout-redesign",
            "type": "string"
        },
        {
            "key": "audienceSegment",
            "value": "beta-testers",
            "type": "string"
        },
        {
            "key": "apiKey",
            "value": "",
            "type": "string",
            "description": "Project/environment API key for JWT issuance."
        },
        {
            "key": "bearerToken",
            "value": "",
            "type": "string",
            "description": "Populated automatically after a successful token exchange."
        }
    ]
}
