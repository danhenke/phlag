{
    "openapi": "3.0.0",
    "info": {
        "title": "Phlag API",
        "description": "API for managing feature flags, environments, and evaluations within Phlag.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Retrieve service health status.",
                "operationId": "getHealthCheck",
                "responses": {
                    "200": {
                        "description": "Service is available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Health check payload.",
                                    "required": [
                                        "service",
                                        "status",
                                        "timestamp"
                                    ],
                                    "properties": {
                                        "service": {
                                            "description": "Service identifier.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Service availability status.",
                                            "type": "string",
                                            "enum": [
                                                "ok"
                                            ]
                                        },
                                        "timestamp": {
                                            "description": "ISO-8601 timestamp when the health check was evaluated.",
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Issue JWT from API key",
                "description": "Exchange a project/environment API key for a JWT bearer token.",
                "operationId": "exchangeApiKeyForJwt",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "JWT issued successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthTokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials supplied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project or environment not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/docs/openapi.json": {
            "get": {
                "tags": [
                    "Documentation"
                ],
                "summary": "Retrieve the OpenAPI specification JSON.",
                "operationId": "getOpenApiDocument",
                "responses": {
                    "200": {
                        "description": "OpenAPI document as JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specification artifact is not available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Specification artifact could not be parsed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/docs": {
            "get": {
                "tags": [
                    "Documentation"
                ],
                "summary": "Render Swagger UI backed by the generated OpenAPI spec.",
                "operationId": "getSwaggerUi",
                "responses": {
                    "200": {
                        "description": "Swagger UI HTML response.",
                        "content": {
                            "text/html": {}
                        }
                    }
                }
            }
        },
        "/v1/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "List projects",
                "description": "List projects with pagination support.",
                "operationId": "listProjects",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page (1-100).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of projects.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create a project",
                "description": "Store a newly created project.",
                "operationId": "createProject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project created.",
                        "headers": {
                            "Location": {
                                "description": "URI of the created project.",
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Fetch a project",
                "description": "Display the specified project.",
                "operationId": "getProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Replace a project",
                "operationId": "replaceProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a project",
                "description": "Remove the specified project.",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Project deleted."
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update a project",
                "description": "Update the specified project.",
                "operationId": "updateProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project}/environments": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "List environments for a project",
                "description": "List environments for the given project.",
                "operationId": "listProjectEnvironments",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page (1-100).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of environments.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvironmentCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Environments"
                ],
                "summary": "Create an environment for a project",
                "description": "Store a newly created environment.",
                "operationId": "createProjectEnvironment",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Environment created.",
                        "headers": {
                            "Location": {
                                "description": "URI of the created environment.",
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvironmentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project}/environments/{environment}": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Fetch an environment",
                "description": "Display the specified environment.",
                "operationId": "getProjectEnvironment",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "Environment key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvironmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment or project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Environments"
                ],
                "summary": "Replace an environment",
                "operationId": "replaceProjectEnvironment",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "Environment key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Environment updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvironmentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment or project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Environments"
                ],
                "summary": "Delete an environment",
                "description": "Remove the specified environment.",
                "operationId": "deleteProjectEnvironment",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "Environment key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Environment deleted."
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment or project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Environments"
                ],
                "summary": "Update an environment",
                "description": "Update the specified environment.",
                "operationId": "updateProjectEnvironment",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "Environment key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvironmentUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Environment updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvironmentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment or project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project}/flags": {
            "get": {
                "tags": [
                    "Flags"
                ],
                "summary": "List flags for a project",
                "description": "List flags for the given project.",
                "operationId": "listProjectFlags",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page (1-100).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of flags.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlagCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Flags"
                ],
                "summary": "Create a flag for a project",
                "description": "Store a newly created flag.",
                "operationId": "createProjectFlag",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FlagCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Flag created.",
                        "headers": {
                            "Location": {
                                "description": "URI of the created flag.",
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlagResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/projects/{project}/flags/{flag}": {
            "get": {
                "tags": [
                    "Flags"
                ],
                "summary": "Fetch a flag",
                "description": "Display the specified flag.",
                "operationId": "getProjectFlag",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flag",
                        "in": "path",
                        "description": "Flag key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flag details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlagResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Flag or project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Flags"
                ],
                "summary": "Replace a flag",
                "operationId": "replaceProjectFlag",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flag",
                        "in": "path",
                        "description": "Flag key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FlagUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Flag updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlagResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Flag or project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Flags"
                ],
                "summary": "Delete a flag",
                "description": "Remove the specified flag.",
                "operationId": "deleteProjectFlag",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flag",
                        "in": "path",
                        "description": "Flag key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Flag deleted."
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Flag or project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Flags"
                ],
                "summary": "Update a flag",
                "description": "Update the specified flag.",
                "operationId": "updateProjectFlag",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flag",
                        "in": "path",
                        "description": "Flag key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FlagUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Flag updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlagResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request body contained malformed JSON.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Flag or project not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/evaluate": {
            "get": {
                "tags": [
                    "Flags"
                ],
                "summary": "Evaluate a feature flag",
                "description": "Determines the variant to serve for a project/environment/flag combination using rollout rules and default fallbacks.",
                "operationId": "evaluateFlag",
                "parameters": [
                    {
                        "name": "project",
                        "in": "query",
                        "description": "Project key that owns the flag.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "env",
                        "in": "query",
                        "description": "Environment key within the project.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flag",
                        "in": "query",
                        "description": "Flag key to evaluate.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Optional user identifier used for deterministic rollout bucketing.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context",
                        "in": "query",
                        "description": "Additional evaluation context (pass as repeated query parameters such as `?country=US&segment=beta-testers`).",
                        "required": false,
                        "style": "deepObject",
                        "explode": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Evaluation completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlagEvaluationResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project, environment, or flag not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed for the evaluation request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Project": {
                "description": "Project representation returned by the API.",
                "required": [
                    "id",
                    "key",
                    "name",
                    "created_at",
                    "updated_at",
                    "environments"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "c0a8012a-7bb2-45cb-9e7a-17a4cda9e90a"
                    },
                    "key": {
                        "type": "string",
                        "example": "checkout-service"
                    },
                    "name": {
                        "type": "string",
                        "example": "Checkout Service"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Environment"
                        }
                    }
                },
                "type": "object"
            },
            "ProjectResponse": {
                "description": "Single project response envelope.",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Project"
                    }
                },
                "type": "object"
            },
            "PaginationLinks": {
                "description": "Pagination links keyed by relation name.",
                "type": "object",
                "additionalProperties": {
                    "type": "string",
                    "nullable": true
                }
            },
            "PaginationMeta": {
                "description": "Pagination metadata returned alongside resource collections.",
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "per_page": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "total": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "last_page": {
                        "type": "integer",
                        "minimum": 1,
                        "nullable": true
                    }
                },
                "type": "object",
                "additionalProperties": {}
            },
            "ProjectCollection": {
                "description": "Paginated project collection response.",
                "required": [
                    "data",
                    "links",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "Environment": {
                "description": "Environment representation.",
                "required": [
                    "id",
                    "key",
                    "name",
                    "is_default",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "EnvironmentResponse": {
                "description": "Single environment response envelope.",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Environment"
                    }
                },
                "type": "object"
            },
            "EnvironmentCollection": {
                "description": "Paginated environment collection response.",
                "required": [
                    "data",
                    "links",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Environment"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "FlagVariant": {
                "description": "Flag variant configuration.",
                "required": [
                    "key"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "example": "variant-a"
                    },
                    "weight": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "nullable": true
                    },
                    "payload": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {}
                    }
                },
                "type": "object"
            },
            "FlagRule": {
                "description": "Flag evaluation rule definition.",
                "required": [
                    "match",
                    "variant"
                ],
                "properties": {
                    "match": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "variant": {
                        "type": "string"
                    },
                    "rollout": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Flag": {
                "description": "Flag representation.",
                "required": [
                    "id",
                    "project_id",
                    "key",
                    "name",
                    "is_enabled",
                    "variants",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_enabled": {
                        "type": "boolean"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlagVariant"
                        }
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlagRule"
                        },
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "FlagResponse": {
                "description": "Single flag response envelope.",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Flag"
                    }
                },
                "type": "object"
            },
            "FlagCollection": {
                "description": "Paginated flag collection response.",
                "required": [
                    "data",
                    "links",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Flag"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "ProjectCreateRequest": {
                "description": "Payload for creating a project.",
                "required": [
                    "key",
                    "name"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9][a-z0-9-]*$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ProjectUpdateRequest": {
                "description": "Payload for updating a project.",
                "properties": {
                    "key": {
                        "type": "string",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9][a-z0-9-]*$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "EnvironmentCreateRequest": {
                "description": "Payload for creating an environment.",
                "required": [
                    "key",
                    "name"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9][a-z0-9-]*$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_default": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "EnvironmentUpdateRequest": {
                "description": "Payload for updating an environment.",
                "properties": {
                    "key": {
                        "type": "string",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9][a-z0-9-]*$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_default": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "FlagCreateRequest": {
                "description": "Payload for creating a flag.",
                "required": [
                    "key",
                    "name",
                    "variants"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9][a-z0-9-]*$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_enabled": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlagVariant"
                        },
                        "minItems": 1
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlagRule"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "FlagUpdateRequest": {
                "description": "Payload for updating a flag.",
                "properties": {
                    "key": {
                        "type": "string",
                        "maxLength": 64,
                        "pattern": "^[a-z0-9][a-z0-9-]*$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_enabled": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlagVariant"
                        },
                        "minItems": 1,
                        "nullable": true
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlagRule"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "FlagEvaluationResult": {
                "description": "Outcome details for a flag evaluation.",
                "required": [
                    "variant",
                    "reason",
                    "rollout"
                ],
                "properties": {
                    "variant": {
                        "description": "Variant key returned by evaluation.",
                        "type": "string",
                        "nullable": true
                    },
                    "reason": {
                        "description": "Why the variant was selected.",
                        "type": "string"
                    },
                    "rollout": {
                        "description": "Rollout percentage used for the decision.",
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0
                    },
                    "payload": {
                        "description": "Optional payload attached to the chosen variant.",
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": {}
                    },
                    "bucket": {
                        "description": "Deterministic bucket assigned when a rollout rule applies.",
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "FlagEvaluation": {
                "description": "Resource returned after evaluating a flag.",
                "required": [
                    "id",
                    "project",
                    "environment",
                    "flag",
                    "context",
                    "result",
                    "evaluated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "required": [
                            "id",
                            "key"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "environment": {
                        "required": [
                            "id",
                            "key"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "key": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "flag": {
                        "required": [
                            "id",
                            "key",
                            "is_enabled"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "key": {
                                "type": "string"
                            },
                            "is_enabled": {
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "user": {
                        "properties": {
                            "identifier": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "context": {
                        "description": "Evaluation context echoed from the request. Values may be strings or arrays in practice.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "result": {
                        "$ref": "#/components/schemas/FlagEvaluationResult"
                    },
                    "evaluated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "FlagEvaluationResponse": {
                "description": "Response envelope for flag evaluation results.",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/FlagEvaluation"
                    }
                },
                "type": "object"
            },
            "AuthTokenRequest": {
                "description": "Payload for exchanging a project/environment API key for a JWT.",
                "required": [
                    "project",
                    "environment",
                    "api_key"
                ],
                "properties": {
                    "project": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "demo-project"
                    },
                    "environment": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "production"
                    },
                    "api_key": {
                        "type": "string",
                        "example": "<project-environment-api-key>"
                    }
                },
                "type": "object"
            },
            "AuthTokenResponse": {
                "description": "JWT issuance response payload.",
                "required": [
                    "token",
                    "token_type",
                    "expires_in",
                    "project",
                    "environment",
                    "roles"
                ],
                "properties": {
                    "token": {
                        "description": "Signed JWT bearer token.",
                        "type": "string"
                    },
                    "token_type": {
                        "type": "string",
                        "example": "Bearer"
                    },
                    "expires_in": {
                        "description": "Token lifetime in seconds.",
                        "type": "integer",
                        "minimum": 0,
                        "example": 3600
                    },
                    "project": {
                        "type": "string",
                        "example": "demo-project"
                    },
                    "environment": {
                        "type": "string",
                        "example": "production"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "projects.read",
                            "environments.read",
                            "flags.read",
                            "flags.evaluate",
                            "cache.warm"
                        ]
                    }
                },
                "type": "object"
            },
            "ErrorViolation": {
                "description": "Details of a single validation violation.",
                "required": [
                    "field",
                    "message"
                ],
                "properties": {
                    "field": {
                        "description": "Field path that failed validation.",
                        "type": "string"
                    },
                    "message": {
                        "description": "Human-readable description of the validation error.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ErrorEnvelope": {
                "description": "Standardized error payload returned by the Phlag API.",
                "required": [
                    "code",
                    "message",
                    "status"
                ],
                "properties": {
                    "code": {
                        "description": "Machine-readable error identifier.",
                        "type": "string",
                        "enum": [
                            "bad_request",
                            "conflict",
                            "forbidden",
                            "http_error",
                            "method_not_allowed",
                            "not_implemented",
                            "rate_limited",
                            "resource_not_found",
                            "server_error",
                            "unauthorized",
                            "validation_failed"
                        ]
                    },
                    "message": {
                        "description": "Concise, human-readable explanation of the error.",
                        "type": "string"
                    },
                    "status": {
                        "description": "HTTP status code associated with the error.",
                        "type": "integer",
                        "format": "int32"
                    },
                    "detail": {
                        "description": "Optional detail for debugging when debug mode is enabled.",
                        "type": "string",
                        "nullable": true
                    },
                    "context": {
                        "description": "Optional key-value pairs providing additional context for the error.",
                        "type": "object",
                        "nullable": true
                    },
                    "violations": {
                        "description": "List of validation violations when the error represents validation failures.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorViolation"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "description": "Envelope for all error responses returned by the Phlag API.",
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ErrorEnvelope"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Documentation",
            "description": "Documentation"
        },
        {
            "name": "Projects",
            "description": "Projects"
        },
        {
            "name": "Environments",
            "description": "Environments"
        },
        {
            "name": "Flags",
            "description": "Flags"
        },
        {
            "name": "System",
            "description": "System"
        }
    ]
}
