name: Docker Publish

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to publish (defaults to current commit SHA)"
        required: false
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/phlag

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine tags
        id: vars
        run: |
          SHORT_SHA="$(git rev-parse --short HEAD)"
          echo "short_sha=${SHORT_SHA}" >> "${GITHUB_OUTPUT}"

          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" && -n "${{ github.event.inputs.tag }}" ]]; then
            TAG="${{ github.event.inputs.tag }}"
          elif [[ "${GITHUB_EVENT_NAME}" == "push" && "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF_NAME}"
          else
            TAG="$(git rev-parse --short HEAD)"
          fi

          echo "tag=${TAG}" >> "${GITHUB_OUTPUT}"

          if [[ "${GITHUB_EVENT_NAME}" == "push" && "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "latest=true" >> "${GITHUB_OUTPUT}"
          else
            echo "latest=false" >> "${GITHUB_OUTPUT}"
          fi

      - name: Log in to GHCR (PAT)
        if: ${{ secrets.GHCR_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Log in to GHCR (GitHub token)
        if: ${{ secrets.GHCR_TOKEN == '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${{ steps.vars.outputs.short_sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Push latest tag
        if: steps.vars.outputs.latest == 'true'
        run: |
          docker tag "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}" "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          docker push "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
